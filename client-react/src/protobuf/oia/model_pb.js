/* eslint-disable */
// source: model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.oia.Alarm', null, global);
goog.exportSymbol('proto.oia.AlarmType', null, global);
goog.exportSymbol('proto.oia.DatabaseEvent', null, global);
goog.exportSymbol('proto.oia.Empty', null, global);
goog.exportSymbol('proto.oia.EventParameter', null, global);
goog.exportSymbol('proto.oia.Geolocation', null, global);
goog.exportSymbol('proto.oia.IPInterface', null, global);
goog.exportSymbol('proto.oia.InMemoryEvent', null, global);
goog.exportSymbol('proto.oia.MetaData', null, global);
goog.exportSymbol('proto.oia.Node', null, global);
goog.exportSymbol('proto.oia.NodeAssetRecord', null, global);
goog.exportSymbol('proto.oia.SNMPInterface', null, global);
goog.exportSymbol('proto.oia.Severity', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.Empty.displayName = 'proto.oia.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.EventParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.EventParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.EventParameter.displayName = 'proto.oia.EventParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.DatabaseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.oia.DatabaseEvent.repeatedFields_, null);
};
goog.inherits(proto.oia.DatabaseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.DatabaseEvent.displayName = 'proto.oia.DatabaseEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.InMemoryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.oia.InMemoryEvent.repeatedFields_, null);
};
goog.inherits(proto.oia.InMemoryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.InMemoryEvent.displayName = 'proto.oia.InMemoryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.IPInterface = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.oia.IPInterface.repeatedFields_, null);
};
goog.inherits(proto.oia.IPInterface, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.IPInterface.displayName = 'proto.oia.IPInterface';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.SNMPInterface = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.SNMPInterface, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.SNMPInterface.displayName = 'proto.oia.SNMPInterface';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.MetaData.displayName = 'proto.oia.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.Geolocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.Geolocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.Geolocation.displayName = 'proto.oia.Geolocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.NodeAssetRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.oia.NodeAssetRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.NodeAssetRecord.displayName = 'proto.oia.NodeAssetRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.oia.Node.repeatedFields_, null);
};
goog.inherits(proto.oia.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.Node.displayName = 'proto.oia.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.oia.Alarm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.oia.Alarm.repeatedFields_, null);
};
goog.inherits(proto.oia.Alarm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.oia.Alarm.displayName = 'proto.oia.Alarm';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.Empty}
 */
proto.oia.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.Empty;
  return proto.oia.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.Empty}
 */
proto.oia.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.EventParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.EventParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.EventParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.EventParameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.EventParameter}
 */
proto.oia.EventParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.EventParameter;
  return proto.oia.EventParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.EventParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.EventParameter}
 */
proto.oia.EventParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.EventParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.EventParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.EventParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.EventParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.oia.EventParameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.EventParameter} returns this
 */
proto.oia.EventParameter.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.oia.EventParameter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.EventParameter} returns this
 */
proto.oia.EventParameter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.oia.DatabaseEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.DatabaseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.DatabaseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.DatabaseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.DatabaseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    uei: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.oia.EventParameter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.DatabaseEvent}
 */
proto.oia.DatabaseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.DatabaseEvent;
  return proto.oia.DatabaseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.DatabaseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.DatabaseEvent}
 */
proto.oia.DatabaseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUei(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = new proto.oia.EventParameter;
      reader.readMessage(value,proto.oia.EventParameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.DatabaseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.DatabaseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.DatabaseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.DatabaseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUei();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.oia.EventParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uei = 1;
 * @return {string}
 */
proto.oia.DatabaseEvent.prototype.getUei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.DatabaseEvent} returns this
 */
proto.oia.DatabaseEvent.prototype.setUei = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.oia.DatabaseEvent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.DatabaseEvent} returns this
 */
proto.oia.DatabaseEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated EventParameter parameters = 3;
 * @return {!Array<!proto.oia.EventParameter>}
 */
proto.oia.DatabaseEvent.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.oia.EventParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.EventParameter, 3));
};


/**
 * @param {!Array<!proto.oia.EventParameter>} value
 * @return {!proto.oia.DatabaseEvent} returns this
*/
proto.oia.DatabaseEvent.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.oia.EventParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.EventParameter}
 */
proto.oia.DatabaseEvent.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.oia.EventParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.DatabaseEvent} returns this
 */
proto.oia.DatabaseEvent.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.oia.InMemoryEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.InMemoryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.InMemoryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.InMemoryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.InMemoryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    uei: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    severity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.oia.EventParameter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.InMemoryEvent}
 */
proto.oia.InMemoryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.InMemoryEvent;
  return proto.oia.InMemoryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.InMemoryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.InMemoryEvent}
 */
proto.oia.InMemoryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUei(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {!proto.oia.Severity} */ (reader.readEnum());
      msg.setSeverity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNodeId(value);
      break;
    case 5:
      var value = new proto.oia.EventParameter;
      reader.readMessage(value,proto.oia.EventParameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.InMemoryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.InMemoryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.InMemoryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.InMemoryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUei();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSeverity();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNodeId();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.oia.EventParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uei = 1;
 * @return {string}
 */
proto.oia.InMemoryEvent.prototype.getUei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.InMemoryEvent} returns this
 */
proto.oia.InMemoryEvent.prototype.setUei = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.oia.InMemoryEvent.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.InMemoryEvent} returns this
 */
proto.oia.InMemoryEvent.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Severity severity = 3;
 * @return {!proto.oia.Severity}
 */
proto.oia.InMemoryEvent.prototype.getSeverity = function() {
  return /** @type {!proto.oia.Severity} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.oia.Severity} value
 * @return {!proto.oia.InMemoryEvent} returns this
 */
proto.oia.InMemoryEvent.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint64 node_id = 4;
 * @return {number}
 */
proto.oia.InMemoryEvent.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.InMemoryEvent} returns this
 */
proto.oia.InMemoryEvent.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated EventParameter parameters = 5;
 * @return {!Array<!proto.oia.EventParameter>}
 */
proto.oia.InMemoryEvent.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.oia.EventParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.EventParameter, 5));
};


/**
 * @param {!Array<!proto.oia.EventParameter>} value
 * @return {!proto.oia.InMemoryEvent} returns this
*/
proto.oia.InMemoryEvent.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.oia.EventParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.EventParameter}
 */
proto.oia.InMemoryEvent.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.oia.EventParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.InMemoryEvent} returns this
 */
proto.oia.InMemoryEvent.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.oia.IPInterface.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.IPInterface.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.IPInterface.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.IPInterface} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.IPInterface.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    snmpInterface: (f = msg.getSnmpInterface()) && proto.oia.SNMPInterface.toObject(includeInstance, f),
    metaDataList: jspb.Message.toObjectList(msg.getMetaDataList(),
    proto.oia.MetaData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.IPInterface}
 */
proto.oia.IPInterface.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.IPInterface;
  return proto.oia.IPInterface.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.IPInterface} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.IPInterface}
 */
proto.oia.IPInterface.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 2:
      var value = new proto.oia.SNMPInterface;
      reader.readMessage(value,proto.oia.SNMPInterface.deserializeBinaryFromReader);
      msg.setSnmpInterface(value);
      break;
    case 3:
      var value = new proto.oia.MetaData;
      reader.readMessage(value,proto.oia.MetaData.deserializeBinaryFromReader);
      msg.addMetaData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.IPInterface.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.IPInterface.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.IPInterface} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.IPInterface.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSnmpInterface();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.oia.SNMPInterface.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.oia.MetaData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ip_address = 1;
 * @return {string}
 */
proto.oia.IPInterface.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.IPInterface} returns this
 */
proto.oia.IPInterface.prototype.setIpAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SNMPInterface snmp_interface = 2;
 * @return {?proto.oia.SNMPInterface}
 */
proto.oia.IPInterface.prototype.getSnmpInterface = function() {
  return /** @type{?proto.oia.SNMPInterface} */ (
    jspb.Message.getWrapperField(this, proto.oia.SNMPInterface, 2));
};


/**
 * @param {?proto.oia.SNMPInterface|undefined} value
 * @return {!proto.oia.IPInterface} returns this
*/
proto.oia.IPInterface.prototype.setSnmpInterface = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.oia.IPInterface} returns this
 */
proto.oia.IPInterface.prototype.clearSnmpInterface = function() {
  return this.setSnmpInterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.oia.IPInterface.prototype.hasSnmpInterface = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MetaData meta_data = 3;
 * @return {!Array<!proto.oia.MetaData>}
 */
proto.oia.IPInterface.prototype.getMetaDataList = function() {
  return /** @type{!Array<!proto.oia.MetaData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.MetaData, 3));
};


/**
 * @param {!Array<!proto.oia.MetaData>} value
 * @return {!proto.oia.IPInterface} returns this
*/
proto.oia.IPInterface.prototype.setMetaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.oia.MetaData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.MetaData}
 */
proto.oia.IPInterface.prototype.addMetaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.oia.MetaData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.IPInterface} returns this
 */
proto.oia.IPInterface.prototype.clearMetaDataList = function() {
  return this.setMetaDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.SNMPInterface.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.SNMPInterface.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.SNMPInterface} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.SNMPInterface.toObject = function(includeInstance, msg) {
  var f, obj = {
    ifDescr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ifName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ifIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.SNMPInterface}
 */
proto.oia.SNMPInterface.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.SNMPInterface;
  return proto.oia.SNMPInterface.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.SNMPInterface} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.SNMPInterface}
 */
proto.oia.SNMPInterface.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfDescr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIfIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.SNMPInterface.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.SNMPInterface.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.SNMPInterface} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.SNMPInterface.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIfDescr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIfName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIfIndex();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string if_descr = 1;
 * @return {string}
 */
proto.oia.SNMPInterface.prototype.getIfDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.SNMPInterface} returns this
 */
proto.oia.SNMPInterface.prototype.setIfDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string if_name = 2;
 * @return {string}
 */
proto.oia.SNMPInterface.prototype.getIfName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.SNMPInterface} returns this
 */
proto.oia.SNMPInterface.prototype.setIfName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 if_index = 3;
 * @return {number}
 */
proto.oia.SNMPInterface.prototype.getIfIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.SNMPInterface} returns this
 */
proto.oia.SNMPInterface.prototype.setIfIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: jspb.Message.getFieldWithDefault(msg, 1, ""),
    key: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.MetaData}
 */
proto.oia.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.MetaData;
  return proto.oia.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.MetaData}
 */
proto.oia.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string context = 1;
 * @return {string}
 */
proto.oia.MetaData.prototype.getContext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.MetaData} returns this
 */
proto.oia.MetaData.prototype.setContext = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.oia.MetaData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.MetaData} returns this
 */
proto.oia.MetaData.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.oia.MetaData.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.MetaData} returns this
 */
proto.oia.MetaData.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.Geolocation.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.Geolocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.Geolocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Geolocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    address1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address2: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    zip: jspb.Message.getFieldWithDefault(msg, 5, ""),
    country: jspb.Message.getFieldWithDefault(msg, 6, ""),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.Geolocation}
 */
proto.oia.Geolocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.Geolocation;
  return proto.oia.Geolocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.Geolocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.Geolocation}
 */
proto.oia.Geolocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setZip(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.Geolocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.Geolocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.Geolocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Geolocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getZip();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional string address1 = 1;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getAddress1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setAddress1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address2 = 2;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getAddress2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setAddress2 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string zip = 5;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getZip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setZip = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string country = 6;
 * @return {string}
 */
proto.oia.Geolocation.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double longitude = 7;
 * @return {number}
 */
proto.oia.Geolocation.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double latitude = 8;
 * @return {number}
 */
proto.oia.Geolocation.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Geolocation} returns this
 */
proto.oia.Geolocation.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.NodeAssetRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.NodeAssetRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.NodeAssetRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.NodeAssetRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    vendor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assetNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    operatingSystem: jspb.Message.getFieldWithDefault(msg, 5, ""),
    region: jspb.Message.getFieldWithDefault(msg, 6, ""),
    division: jspb.Message.getFieldWithDefault(msg, 7, ""),
    department: jspb.Message.getFieldWithDefault(msg, 8, ""),
    building: jspb.Message.getFieldWithDefault(msg, 9, ""),
    floor: jspb.Message.getFieldWithDefault(msg, 10, ""),
    geolocation: (f = msg.getGeolocation()) && proto.oia.Geolocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.NodeAssetRecord}
 */
proto.oia.NodeAssetRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.NodeAssetRecord;
  return proto.oia.NodeAssetRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.NodeAssetRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.NodeAssetRecord}
 */
proto.oia.NodeAssetRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetNumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingSystem(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDivision(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartment(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuilding(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloor(value);
      break;
    case 11:
      var value = new proto.oia.Geolocation;
      reader.readMessage(value,proto.oia.Geolocation.deserializeBinaryFromReader);
      msg.setGeolocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.NodeAssetRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.NodeAssetRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.NodeAssetRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.NodeAssetRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVendor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssetNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOperatingSystem();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDivision();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDepartment();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBuilding();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFloor();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getGeolocation();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.oia.Geolocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string vendor = 1;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setVendor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model_number = 2;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getModelNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setModelNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string asset_number = 4;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getAssetNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setAssetNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string operating_system = 5;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getOperatingSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setOperatingSystem = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string region = 6;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string division = 7;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getDivision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setDivision = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string department = 8;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getDepartment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setDepartment = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string building = 9;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getBuilding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setBuilding = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string floor = 10;
 * @return {string}
 */
proto.oia.NodeAssetRecord.prototype.getFloor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.setFloor = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Geolocation geolocation = 11;
 * @return {?proto.oia.Geolocation}
 */
proto.oia.NodeAssetRecord.prototype.getGeolocation = function() {
  return /** @type{?proto.oia.Geolocation} */ (
    jspb.Message.getWrapperField(this, proto.oia.Geolocation, 11));
};


/**
 * @param {?proto.oia.Geolocation|undefined} value
 * @return {!proto.oia.NodeAssetRecord} returns this
*/
proto.oia.NodeAssetRecord.prototype.setGeolocation = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.oia.NodeAssetRecord} returns this
 */
proto.oia.NodeAssetRecord.prototype.clearGeolocation = function() {
  return this.setGeolocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.oia.NodeAssetRecord.prototype.hasGeolocation = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.oia.Node.repeatedFields_ = [7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    foreignSource: jspb.Message.getFieldWithDefault(msg, 2, ""),
    foreignId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    location: jspb.Message.getFieldWithDefault(msg, 5, ""),
    assetRecord: (f = msg.getAssetRecord()) && proto.oia.NodeAssetRecord.toObject(includeInstance, f),
    ipInterfacesList: jspb.Message.toObjectList(msg.getIpInterfacesList(),
    proto.oia.IPInterface.toObject, includeInstance),
    snmpInterfacesList: jspb.Message.toObjectList(msg.getSnmpInterfacesList(),
    proto.oia.SNMPInterface.toObject, includeInstance),
    metaDataList: jspb.Message.toObjectList(msg.getMetaDataList(),
    proto.oia.MetaData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.Node}
 */
proto.oia.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.Node;
  return proto.oia.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.Node}
 */
proto.oia.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setForeignSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setForeignId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 6:
      var value = new proto.oia.NodeAssetRecord;
      reader.readMessage(value,proto.oia.NodeAssetRecord.deserializeBinaryFromReader);
      msg.setAssetRecord(value);
      break;
    case 7:
      var value = new proto.oia.IPInterface;
      reader.readMessage(value,proto.oia.IPInterface.deserializeBinaryFromReader);
      msg.addIpInterfaces(value);
      break;
    case 8:
      var value = new proto.oia.SNMPInterface;
      reader.readMessage(value,proto.oia.SNMPInterface.deserializeBinaryFromReader);
      msg.addSnmpInterfaces(value);
      break;
    case 9:
      var value = new proto.oia.MetaData;
      reader.readMessage(value,proto.oia.MetaData.deserializeBinaryFromReader);
      msg.addMetaData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getForeignSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForeignId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAssetRecord();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.oia.NodeAssetRecord.serializeBinaryToWriter
    );
  }
  f = message.getIpInterfacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.oia.IPInterface.serializeBinaryToWriter
    );
  }
  f = message.getSnmpInterfacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.oia.SNMPInterface.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.oia.MetaData.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.oia.Node.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string foreign_source = 2;
 * @return {string}
 */
proto.oia.Node.prototype.getForeignSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.setForeignSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string foreign_id = 3;
 * @return {string}
 */
proto.oia.Node.prototype.getForeignId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.setForeignId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.oia.Node.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location = 5;
 * @return {string}
 */
proto.oia.Node.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional NodeAssetRecord asset_record = 6;
 * @return {?proto.oia.NodeAssetRecord}
 */
proto.oia.Node.prototype.getAssetRecord = function() {
  return /** @type{?proto.oia.NodeAssetRecord} */ (
    jspb.Message.getWrapperField(this, proto.oia.NodeAssetRecord, 6));
};


/**
 * @param {?proto.oia.NodeAssetRecord|undefined} value
 * @return {!proto.oia.Node} returns this
*/
proto.oia.Node.prototype.setAssetRecord = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.clearAssetRecord = function() {
  return this.setAssetRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.oia.Node.prototype.hasAssetRecord = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated IPInterface ip_interfaces = 7;
 * @return {!Array<!proto.oia.IPInterface>}
 */
proto.oia.Node.prototype.getIpInterfacesList = function() {
  return /** @type{!Array<!proto.oia.IPInterface>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.IPInterface, 7));
};


/**
 * @param {!Array<!proto.oia.IPInterface>} value
 * @return {!proto.oia.Node} returns this
*/
proto.oia.Node.prototype.setIpInterfacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.oia.IPInterface=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.IPInterface}
 */
proto.oia.Node.prototype.addIpInterfaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.oia.IPInterface, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.clearIpInterfacesList = function() {
  return this.setIpInterfacesList([]);
};


/**
 * repeated SNMPInterface snmp_interfaces = 8;
 * @return {!Array<!proto.oia.SNMPInterface>}
 */
proto.oia.Node.prototype.getSnmpInterfacesList = function() {
  return /** @type{!Array<!proto.oia.SNMPInterface>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.SNMPInterface, 8));
};


/**
 * @param {!Array<!proto.oia.SNMPInterface>} value
 * @return {!proto.oia.Node} returns this
*/
proto.oia.Node.prototype.setSnmpInterfacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.oia.SNMPInterface=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.SNMPInterface}
 */
proto.oia.Node.prototype.addSnmpInterfaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.oia.SNMPInterface, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.clearSnmpInterfacesList = function() {
  return this.setSnmpInterfacesList([]);
};


/**
 * repeated MetaData meta_data = 9;
 * @return {!Array<!proto.oia.MetaData>}
 */
proto.oia.Node.prototype.getMetaDataList = function() {
  return /** @type{!Array<!proto.oia.MetaData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.MetaData, 9));
};


/**
 * @param {!Array<!proto.oia.MetaData>} value
 * @return {!proto.oia.Node} returns this
*/
proto.oia.Node.prototype.setMetaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.oia.MetaData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.MetaData}
 */
proto.oia.Node.prototype.addMetaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.oia.MetaData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.Node} returns this
 */
proto.oia.Node.prototype.clearMetaDataList = function() {
  return this.setMetaDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.oia.Alarm.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.oia.Alarm.prototype.toObject = function(opt_includeInstance) {
  return proto.oia.Alarm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.oia.Alarm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Alarm.toObject = function(includeInstance, msg) {
  var f, obj = {
    reductionKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    node: (f = msg.getNode()) && proto.oia.Node.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    managedObjectInstance: jspb.Message.getFieldWithDefault(msg, 5, ""),
    managedObjectType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, undefined) : [],
    severity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isSituation: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    relatedAlarmsList: jspb.Message.toObjectList(msg.getRelatedAlarmsList(),
    proto.oia.Alarm.toObject, includeInstance),
    logMessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    description: jspb.Message.getFieldWithDefault(msg, 12, ""),
    lastEventTime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    firstEventTime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    lastEvent: (f = msg.getLastEvent()) && proto.oia.DatabaseEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.oia.Alarm}
 */
proto.oia.Alarm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.oia.Alarm;
  return proto.oia.Alarm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.oia.Alarm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.oia.Alarm}
 */
proto.oia.Alarm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReductionKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = new proto.oia.Node;
      reader.readMessage(value,proto.oia.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 4:
      var value = /** @type {!proto.oia.AlarmType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagedObjectInstance(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagedObjectType(value);
      break;
    case 7:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {!proto.oia.Severity} */ (reader.readEnum());
      msg.setSeverity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSituation(value);
      break;
    case 10:
      var value = new proto.oia.Alarm;
      reader.readMessage(value,proto.oia.Alarm.deserializeBinaryFromReader);
      msg.addRelatedAlarms(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogMessage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastEventTime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFirstEventTime(value);
      break;
    case 15:
      var value = new proto.oia.DatabaseEvent;
      reader.readMessage(value,proto.oia.DatabaseEvent.deserializeBinaryFromReader);
      msg.setLastEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.oia.Alarm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.oia.Alarm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.oia.Alarm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.oia.Alarm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReductionKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.oia.Node.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getManagedObjectInstance();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getManagedObjectType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSeverity();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getIsSituation();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getRelatedAlarmsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.oia.Alarm.serializeBinaryToWriter
    );
  }
  f = message.getLogMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLastEventTime();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getFirstEventTime();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getLastEvent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.oia.DatabaseEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string reduction_key = 1;
 * @return {string}
 */
proto.oia.Alarm.prototype.getReductionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setReductionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.oia.Alarm.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Node node = 3;
 * @return {?proto.oia.Node}
 */
proto.oia.Alarm.prototype.getNode = function() {
  return /** @type{?proto.oia.Node} */ (
    jspb.Message.getWrapperField(this, proto.oia.Node, 3));
};


/**
 * @param {?proto.oia.Node|undefined} value
 * @return {!proto.oia.Alarm} returns this
*/
proto.oia.Alarm.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.oia.Alarm.prototype.hasNode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AlarmType type = 4;
 * @return {!proto.oia.AlarmType}
 */
proto.oia.Alarm.prototype.getType = function() {
  return /** @type {!proto.oia.AlarmType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.oia.AlarmType} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string managed_object_instance = 5;
 * @return {string}
 */
proto.oia.Alarm.prototype.getManagedObjectInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setManagedObjectInstance = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string managed_object_type = 6;
 * @return {string}
 */
proto.oia.Alarm.prototype.getManagedObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setManagedObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, string> attributes = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.oia.Alarm.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};


/**
 * optional Severity severity = 8;
 * @return {!proto.oia.Severity}
 */
proto.oia.Alarm.prototype.getSeverity = function() {
  return /** @type {!proto.oia.Severity} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.oia.Severity} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bool is_situation = 9;
 * @return {boolean}
 */
proto.oia.Alarm.prototype.getIsSituation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setIsSituation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated Alarm related_alarms = 10;
 * @return {!Array<!proto.oia.Alarm>}
 */
proto.oia.Alarm.prototype.getRelatedAlarmsList = function() {
  return /** @type{!Array<!proto.oia.Alarm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.oia.Alarm, 10));
};


/**
 * @param {!Array<!proto.oia.Alarm>} value
 * @return {!proto.oia.Alarm} returns this
*/
proto.oia.Alarm.prototype.setRelatedAlarmsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.oia.Alarm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.oia.Alarm}
 */
proto.oia.Alarm.prototype.addRelatedAlarms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.oia.Alarm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.clearRelatedAlarmsList = function() {
  return this.setRelatedAlarmsList([]);
};


/**
 * optional string log_message = 11;
 * @return {string}
 */
proto.oia.Alarm.prototype.getLogMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setLogMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.oia.Alarm.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 last_event_time = 13;
 * @return {number}
 */
proto.oia.Alarm.prototype.getLastEventTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setLastEventTime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 first_event_time = 14;
 * @return {number}
 */
proto.oia.Alarm.prototype.getFirstEventTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.setFirstEventTime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional DatabaseEvent last_event = 15;
 * @return {?proto.oia.DatabaseEvent}
 */
proto.oia.Alarm.prototype.getLastEvent = function() {
  return /** @type{?proto.oia.DatabaseEvent} */ (
    jspb.Message.getWrapperField(this, proto.oia.DatabaseEvent, 15));
};


/**
 * @param {?proto.oia.DatabaseEvent|undefined} value
 * @return {!proto.oia.Alarm} returns this
*/
proto.oia.Alarm.prototype.setLastEvent = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.oia.Alarm} returns this
 */
proto.oia.Alarm.prototype.clearLastEvent = function() {
  return this.setLastEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.oia.Alarm.prototype.hasLastEvent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * @enum {number}
 */
proto.oia.Severity = {
  INDETERMINATE: 0,
  CLEARED: 1,
  NORMAL: 2,
  WARNING: 3,
  MINOR: 4,
  MAJOR: 5,
  CRITICAL: 6
};

/**
 * @enum {number}
 */
proto.oia.AlarmType = {
  PROBLEM_WITH_CLEAR: 0,
  CLEAR: 1,
  PROBLEM_WITHOUT_CLEAR: 2
};

goog.object.extend(exports, proto.oia);
