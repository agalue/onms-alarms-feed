// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: alarms.proto

package oia

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AlarmsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alarms []*Alarm `protobuf:"bytes,1,rep,name=alarms,proto3" json:"alarms,omitempty"`
}

func (x *AlarmsList) Reset() {
	*x = AlarmsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alarms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmsList) ProtoMessage() {}

func (x *AlarmsList) ProtoReflect() protoreflect.Message {
	mi := &file_alarms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmsList.ProtoReflect.Descriptor instead.
func (*AlarmsList) Descriptor() ([]byte, []int) {
	return file_alarms_proto_rawDescGZIP(), []int{0}
}

func (x *AlarmsList) GetAlarms() []*Alarm {
	if x != nil {
		return x.Alarms
	}
	return nil
}

type DeleteAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReductionKey string `protobuf:"bytes,2,opt,name=reduction_key,json=reductionKey,proto3" json:"reduction_key,omitempty"`
}

func (x *DeleteAlarm) Reset() {
	*x = DeleteAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alarms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarm) ProtoMessage() {}

func (x *DeleteAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_alarms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarm.ProtoReflect.Descriptor instead.
func (*DeleteAlarm) Descriptor() ([]byte, []int) {
	return file_alarms_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAlarm) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAlarm) GetReductionKey() string {
	if x != nil {
		return x.ReductionKey
	}
	return ""
}

var File_alarms_proto protoreflect.FileDescriptor

var file_alarms_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x6f, 0x69, 0x61, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x30, 0x0a, 0x0a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x06, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x73, 0x22, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x32, 0xbf, 0x01, 0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x12, 0x36, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0a, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x35, 0x0a, 0x17, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x12, 0x0a, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0a, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x36, 0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x0a, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x10, 0x2e, 0x6f, 0x69, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2d, 0x0a, 0x24, 0x6f, 0x72, 0x67, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x05, 0x2e, 0x3b, 0x6f, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alarms_proto_rawDescOnce sync.Once
	file_alarms_proto_rawDescData = file_alarms_proto_rawDesc
)

func file_alarms_proto_rawDescGZIP() []byte {
	file_alarms_proto_rawDescOnce.Do(func() {
		file_alarms_proto_rawDescData = protoimpl.X.CompressGZIP(file_alarms_proto_rawDescData)
	})
	return file_alarms_proto_rawDescData
}

var file_alarms_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_alarms_proto_goTypes = []interface{}{
	(*AlarmsList)(nil),  // 0: oia.AlarmsList
	(*DeleteAlarm)(nil), // 1: oia.DeleteAlarm
	(*Alarm)(nil),       // 2: oia.Alarm
	(*Empty)(nil),       // 3: oia.Empty
}
var file_alarms_proto_depIdxs = []int32{
	2, // 0: oia.AlarmsList.alarms:type_name -> oia.Alarm
	3, // 1: oia.AlarmLifecycleListener.HandleAlarmSnapshot:input_type -> oia.Empty
	3, // 2: oia.AlarmLifecycleListener.HandleNewOrUpdatedAlarm:input_type -> oia.Empty
	3, // 3: oia.AlarmLifecycleListener.HandleDeletedAlarm:input_type -> oia.Empty
	0, // 4: oia.AlarmLifecycleListener.HandleAlarmSnapshot:output_type -> oia.AlarmsList
	2, // 5: oia.AlarmLifecycleListener.HandleNewOrUpdatedAlarm:output_type -> oia.Alarm
	1, // 6: oia.AlarmLifecycleListener.HandleDeletedAlarm:output_type -> oia.DeleteAlarm
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_alarms_proto_init() }
func file_alarms_proto_init() {
	if File_alarms_proto != nil {
		return
	}
	file_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_alarms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alarms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alarms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alarms_proto_goTypes,
		DependencyIndexes: file_alarms_proto_depIdxs,
		MessageInfos:      file_alarms_proto_msgTypes,
	}.Build()
	File_alarms_proto = out.File
	file_alarms_proto_rawDesc = nil
	file_alarms_proto_goTypes = nil
	file_alarms_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlarmLifecycleListenerClient is the client API for AlarmLifecycleListener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlarmLifecycleListenerClient interface {
	// Periodically invoked with the complete list of alarms as stored in the database.
	HandleAlarmSnapshot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleAlarmSnapshotClient, error)
	// Invoked when an alarm is created or updated.
	// Defined as server stream, so the client can get the new or updated alarm immediately.
	HandleNewOrUpdatedAlarm(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleNewOrUpdatedAlarmClient, error)
	// Invoked when an alarm is deleted.
	// Defined as server stream, so the client can get the deleted alarm immediately.
	HandleDeletedAlarm(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleDeletedAlarmClient, error)
}

type alarmLifecycleListenerClient struct {
	cc grpc.ClientConnInterface
}

func NewAlarmLifecycleListenerClient(cc grpc.ClientConnInterface) AlarmLifecycleListenerClient {
	return &alarmLifecycleListenerClient{cc}
}

func (c *alarmLifecycleListenerClient) HandleAlarmSnapshot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleAlarmSnapshotClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AlarmLifecycleListener_serviceDesc.Streams[0], "/oia.AlarmLifecycleListener/HandleAlarmSnapshot", opts...)
	if err != nil {
		return nil, err
	}
	x := &alarmLifecycleListenerHandleAlarmSnapshotClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AlarmLifecycleListener_HandleAlarmSnapshotClient interface {
	Recv() (*AlarmsList, error)
	grpc.ClientStream
}

type alarmLifecycleListenerHandleAlarmSnapshotClient struct {
	grpc.ClientStream
}

func (x *alarmLifecycleListenerHandleAlarmSnapshotClient) Recv() (*AlarmsList, error) {
	m := new(AlarmsList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *alarmLifecycleListenerClient) HandleNewOrUpdatedAlarm(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleNewOrUpdatedAlarmClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AlarmLifecycleListener_serviceDesc.Streams[1], "/oia.AlarmLifecycleListener/HandleNewOrUpdatedAlarm", opts...)
	if err != nil {
		return nil, err
	}
	x := &alarmLifecycleListenerHandleNewOrUpdatedAlarmClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AlarmLifecycleListener_HandleNewOrUpdatedAlarmClient interface {
	Recv() (*Alarm, error)
	grpc.ClientStream
}

type alarmLifecycleListenerHandleNewOrUpdatedAlarmClient struct {
	grpc.ClientStream
}

func (x *alarmLifecycleListenerHandleNewOrUpdatedAlarmClient) Recv() (*Alarm, error) {
	m := new(Alarm)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *alarmLifecycleListenerClient) HandleDeletedAlarm(ctx context.Context, in *Empty, opts ...grpc.CallOption) (AlarmLifecycleListener_HandleDeletedAlarmClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AlarmLifecycleListener_serviceDesc.Streams[2], "/oia.AlarmLifecycleListener/HandleDeletedAlarm", opts...)
	if err != nil {
		return nil, err
	}
	x := &alarmLifecycleListenerHandleDeletedAlarmClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AlarmLifecycleListener_HandleDeletedAlarmClient interface {
	Recv() (*DeleteAlarm, error)
	grpc.ClientStream
}

type alarmLifecycleListenerHandleDeletedAlarmClient struct {
	grpc.ClientStream
}

func (x *alarmLifecycleListenerHandleDeletedAlarmClient) Recv() (*DeleteAlarm, error) {
	m := new(DeleteAlarm)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AlarmLifecycleListenerServer is the server API for AlarmLifecycleListener service.
type AlarmLifecycleListenerServer interface {
	// Periodically invoked with the complete list of alarms as stored in the database.
	HandleAlarmSnapshot(*Empty, AlarmLifecycleListener_HandleAlarmSnapshotServer) error
	// Invoked when an alarm is created or updated.
	// Defined as server stream, so the client can get the new or updated alarm immediately.
	HandleNewOrUpdatedAlarm(*Empty, AlarmLifecycleListener_HandleNewOrUpdatedAlarmServer) error
	// Invoked when an alarm is deleted.
	// Defined as server stream, so the client can get the deleted alarm immediately.
	HandleDeletedAlarm(*Empty, AlarmLifecycleListener_HandleDeletedAlarmServer) error
}

// UnimplementedAlarmLifecycleListenerServer can be embedded to have forward compatible implementations.
type UnimplementedAlarmLifecycleListenerServer struct {
}

func (*UnimplementedAlarmLifecycleListenerServer) HandleAlarmSnapshot(*Empty, AlarmLifecycleListener_HandleAlarmSnapshotServer) error {
	return status.Errorf(codes.Unimplemented, "method HandleAlarmSnapshot not implemented")
}
func (*UnimplementedAlarmLifecycleListenerServer) HandleNewOrUpdatedAlarm(*Empty, AlarmLifecycleListener_HandleNewOrUpdatedAlarmServer) error {
	return status.Errorf(codes.Unimplemented, "method HandleNewOrUpdatedAlarm not implemented")
}
func (*UnimplementedAlarmLifecycleListenerServer) HandleDeletedAlarm(*Empty, AlarmLifecycleListener_HandleDeletedAlarmServer) error {
	return status.Errorf(codes.Unimplemented, "method HandleDeletedAlarm not implemented")
}

func RegisterAlarmLifecycleListenerServer(s *grpc.Server, srv AlarmLifecycleListenerServer) {
	s.RegisterService(&_AlarmLifecycleListener_serviceDesc, srv)
}

func _AlarmLifecycleListener_HandleAlarmSnapshot_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AlarmLifecycleListenerServer).HandleAlarmSnapshot(m, &alarmLifecycleListenerHandleAlarmSnapshotServer{stream})
}

type AlarmLifecycleListener_HandleAlarmSnapshotServer interface {
	Send(*AlarmsList) error
	grpc.ServerStream
}

type alarmLifecycleListenerHandleAlarmSnapshotServer struct {
	grpc.ServerStream
}

func (x *alarmLifecycleListenerHandleAlarmSnapshotServer) Send(m *AlarmsList) error {
	return x.ServerStream.SendMsg(m)
}

func _AlarmLifecycleListener_HandleNewOrUpdatedAlarm_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AlarmLifecycleListenerServer).HandleNewOrUpdatedAlarm(m, &alarmLifecycleListenerHandleNewOrUpdatedAlarmServer{stream})
}

type AlarmLifecycleListener_HandleNewOrUpdatedAlarmServer interface {
	Send(*Alarm) error
	grpc.ServerStream
}

type alarmLifecycleListenerHandleNewOrUpdatedAlarmServer struct {
	grpc.ServerStream
}

func (x *alarmLifecycleListenerHandleNewOrUpdatedAlarmServer) Send(m *Alarm) error {
	return x.ServerStream.SendMsg(m)
}

func _AlarmLifecycleListener_HandleDeletedAlarm_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AlarmLifecycleListenerServer).HandleDeletedAlarm(m, &alarmLifecycleListenerHandleDeletedAlarmServer{stream})
}

type AlarmLifecycleListener_HandleDeletedAlarmServer interface {
	Send(*DeleteAlarm) error
	grpc.ServerStream
}

type alarmLifecycleListenerHandleDeletedAlarmServer struct {
	grpc.ServerStream
}

func (x *alarmLifecycleListenerHandleDeletedAlarmServer) Send(m *DeleteAlarm) error {
	return x.ServerStream.SendMsg(m)
}

var _AlarmLifecycleListener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oia.AlarmLifecycleListener",
	HandlerType: (*AlarmLifecycleListenerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HandleAlarmSnapshot",
			Handler:       _AlarmLifecycleListener_HandleAlarmSnapshot_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HandleNewOrUpdatedAlarm",
			Handler:       _AlarmLifecycleListener_HandleNewOrUpdatedAlarm_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HandleDeletedAlarm",
			Handler:       _AlarmLifecycleListener_HandleDeletedAlarm_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "alarms.proto",
}
